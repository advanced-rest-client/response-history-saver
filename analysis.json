{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "An element that saves requests history in a datastore.\n\nThis element supports Advanced REST Client project.\n\nIt handles the `api-response` event asynchronously and updates both\nrequests history and history data data store.\n\nThe requests history keeps a daily record of requests made by the application.\nIt keeps record of rhe request data that can be restored lated by the\napplication.\n\nThe history data keeps record of every request made by the application.\nIt can be used to analyse performance of an API endpoint.\n\n## Data model\n\n### request data\n\nNote that payload is always string even if the response body was different type.\n\nProperty | Type | Description\n----------------|-------------|-------------\n`_id` | `String` | PouchDB database key.\n`timings` | `Object` | Valid HAR 1.2 timings object.\n`totalTime` | `Number` | Number of milliseconds that took to perform the full request.\n`created` | `Number` | Timestamp of the entry\n`request` | `Object` | A request details object (see below).\n`request.headers` | `String` | HTTP headers string sent to the server.\n`request.payload` | `String` | HTTP message string set to the server.\n`request.url` | `String` | Request URL\n`request.method` | `String` | HTTP method of the request\n`response` | `Object` | Response details object\n`response.statusCode` | `Number` | A status code of the response.\n`response.statusText` | `String` | Status text message. Can be empty or undefined.\n`response.headers` | `String` | HTTP headers string of the response.\n`response.payload` | `String` | Response body string.\n`stats` | `Object` | Request and response basic statistics\n`stats.request` | `Object` | Request basic statistics\n`stats.request.headersSize` | `Number` | Request headers size in bytes\n`stats.request.payloadSize` | `Number` | Request payload size in bytes\n`stats.response` | `Object` | Response basic statistics\n`stats.response.headersSize` | `Number` | Response headers size in bytes\n`stats.response.payloadSize` | `Number` | Response payload size in bytes",
      "summary": "",
      "path": "response-history-saver.js",
      "properties": [
        {
          "name": "_dbData",
          "type": "PouchDB",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 85,
              "column": 2
            },
            "end": {
              "line": 88,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 72,
              "column": 2
            },
            "end": {
              "line": 75,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 2
            },
            "end": {
              "line": 80,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_afterRequestHandler",
          "description": "Handler for the `api-response` event",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 2
            },
            "end": {
              "line": 101,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "saveHistory",
          "description": "Saves request and response data in history.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 110,
              "column": 2
            },
            "end": {
              "line": 114,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "request",
              "type": "Object",
              "description": "ARC request object"
            },
            {
              "name": "response",
              "type": "Object",
              "description": "ARC response object"
            },
            {
              "name": "timings",
              "type": "Object",
              "description": "Request timings as HAR 1.2 timings object"
            }
          ],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_saveHistoryData",
          "description": "Saves history data for history analysis in the data store.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 125,
              "column": 2
            },
            "end": {
              "line": 130,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "request",
              "type": "Request",
              "description": "The request object containg information about\nthe request"
            },
            {
              "name": "response",
              "type": "Response",
              "description": "The response object for the response"
            },
            {
              "name": "eventTimings",
              "type": "?Object",
              "description": "The timings object as descrived in HAR 1.2 spec. Optional."
            }
          ],
          "return": {
            "type": "Promise",
            "desc": "A promise resolved when data were inserted to the\ndatastore."
          }
        },
        {
          "name": "_createHistoryDataModel",
          "description": "Creates a data store model for `_saveHistoryData`",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 132,
              "column": 2
            },
            "end": {
              "line": 176,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "request"
            },
            {
              "name": "response"
            },
            {
              "name": "eventTimings"
            }
          ]
        },
        {
          "name": "_updateHistory",
          "description": "Updates the requests history data store.\nIf the request for given URL and method has been already performed this\nday then the record in the datastore is updated with new data.\nOtherwise a new record is created.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 2
            },
            "end": {
              "line": 218,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "request",
              "type": "Request",
              "description": "The request object."
            },
            {
              "name": "eventTimings",
              "type": "?Object",
              "description": "A HAR 1.2 timings object from the response\nevent."
            }
          ],
          "return": {
            "type": "Promise",
            "desc": "A promise that is resolved then the history object has\nbeen updated in the data store."
          }
        },
        {
          "name": "_computeTimings",
          "description": "Computes a valid timings object as descrived in HAR 1.2 spec.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 226,
              "column": 2
            },
            "end": {
              "line": 236,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventTimings",
              "type": "?Object",
              "description": "A timings object passed by the response\nevent"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "A valid HAR 1.2 timings object."
          }
        },
        {
          "name": "_computeStartTime",
          "description": "Computes a timestamp of the request start time.\nIf timings object provided with the response event contains `startTime`\nproperty it will compute timestamp from it. Otherwise it will use\ncurrent time.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 2
            },
            "end": {
              "line": 251,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventTimings",
              "type": "?Object",
              "description": "Timings object from the response event."
            }
          ],
          "return": {
            "type": "Number",
            "desc": "Timestamp of the request start."
          }
        },
        {
          "name": "_computeTotalTime",
          "description": "Computes total time of the request from the timings object.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 259,
              "column": 2
            },
            "end": {
              "line": 271,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "timings",
              "type": "Object",
              "description": "A timings object as described in HAR 1.2 spec."
            }
          ],
          "return": {
            "type": "Number",
            "desc": "Sum of times in the `timings` object. The `-1` values\ndoeasn't adds. It returns `-1` if all values are -1."
          }
        },
        {
          "name": "_computeHistoryStoreUrl",
          "description": "Produces valid URL to be used in the history-data store.\nThe URL is stripped from query parameters and hash.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 279,
              "column": 2
            },
            "end": {
              "line": 297,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String",
              "description": "A URL to process"
            }
          ],
          "return": {
            "type": "String"
          }
        },
        {
          "name": "_computePayloadSize",
          "description": "Computes size of the payload.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 304,
              "column": 2
            },
            "end": {
              "line": 315,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "payload",
              "type": "(ArrayBuffer | Blob | String)",
              "description": "The payload"
            }
          ],
          "return": {
            "type": "Number",
            "desc": "Size of the payload"
          }
        },
        {
          "name": "_calculateBytes",
          "description": "Calculates size of the string",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 321,
              "column": 2
            },
            "end": {
              "line": 338,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str",
              "type": "String",
              "description": "A string to compute size from."
            }
          ],
          "return": {
            "type": "Number",
            "desc": "Size of the string."
          }
        },
        {
          "name": "_computeHistoryDataId",
          "description": "Computes an ID for the `history-data` datas tore.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 349,
              "column": 2
            },
            "end": {
              "line": 356,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "String",
              "description": "Request URL stripped from query parameters and\nthe hash."
            },
            {
              "name": "method",
              "type": "String",
              "description": "HTTP method name."
            }
          ],
          "return": {
            "type": "String",
            "desc": "Generated unique for this request data store ID. It uses\nUUID generator to add some random data to the ID except for the\nURL and method."
          }
        },
        {
          "name": "_computePayloadString",
          "description": "Computes a payload message as a string.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 363,
              "column": 2
            },
            "end": {
              "line": 378,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "input",
              "type": "any",
              "description": "Request or response payload"
            }
          ],
          "return": {
            "type": "String"
          }
        },
        {
          "name": "_arrayBufferToString",
          "description": "Convert ArrayBuffer to readable form",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 384,
              "column": 2
            },
            "end": {
              "line": 406,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "buffer",
              "type": "ArrayBuffer"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Converted string"
          }
        },
        {
          "name": "_handleException",
          "description": "Handles exceptions to log message ad throws the same exception",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 412,
              "column": 2
            },
            "end": {
              "line": 430,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Error"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 66,
          "column": 0
        },
        "end": {
          "line": 431,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "PolymerElement",
      "name": "LogicElements.ResponseHistorySaver",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "response-history-saver"
    }
  ]
}
